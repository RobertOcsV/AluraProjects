@page "/CadastrarArtista"
@using ScreenSound.Web.Requests
@inject ArtistaAPI artistaAPI
@inject NavigationManager navigationManager
@inject ISnackbar Snackbar

<PageTitle>Cadastrar Artista</PageTitle>

<MudPaper Class="px-8 pt-2 pb-4 mx-12 my-8" Justify="Justify.Center">

    <MudText Class="mt-8" Typo="Typo.h4">Cadastro do Artista</MudText>

    <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">

        <MudTextField Class="mt-4" T="string" Placeholder="Nome do Artista" 
            @bind-Value="nome"
            Variant="Variant.Outlined"
            Required="true" 
            RequiredError="Campo obrigatório." />

        <MudTextField Class="mt-4" T="string" Placeholder="Biografia do artista"
            @bind-Value="biografia"
            Variant="Variant.Outlined"
            Lines="4"
            Required="true" 
            RequiredError="Campo obrigatório." />

        <div class="d-flex align-center justify-space-between mt-4">
            <MudCardContent>
                <MudImage src="@fileImage" />
                <MudFileUpload T="IBrowserFile" Accept=".png, .jpg" FilesChanged="UploadFile" MaximumFileCount="100">
                    <ButtonTemplate>
                        <MudButton HtmlTag="label"                                  
                                   Variant="Variant.Filled"
                                   Color="Color.Primary"
                                   StartIcon="@Icons.Material.Filled.PhotoCamera"
                                   for="@context">
                            Foto de Perfil
                        </MudButton>
                    </ButtonTemplate>
                </MudFileUpload>
            </MudCardContent>
        </div>
        <div class="d-flex align-center justify-space-between mt-4">
            <MudButton 
                Variant="Variant.Filled" 
                Color="Color.Primary" 
                Disabled="@(!success)" 
                Class="ml-auto"
                @onclick="Cadastrar">
                Cadastrar
            </MudButton>
            <MudButton 
                Variant="Variant.Filled" 
                Color="Color.Info" 
                Class="ml-3"
                @onclick="VoltarParaListagem">
                Voltar
            </MudButton>
        </div>

    </MudForm>
    
</MudPaper>

@code {
    bool success;
    string[] errors = { };
    MudForm form;
    private string? nome;
    private string? biografia;

    private string fileImage = string.Empty;
    private string fotoPerfil = string.Empty;

    private void VoltarParaListagem()
    {
        navigationManager.NavigateTo("/Artistas");
    }

    private async Task Cadastrar()
    {
        try
        {
            var request = new ArtistaRequest(nome!, biografia!,fotoPerfil);
            await artistaAPI.AddArtistaAsync(request);
            Snackbar.Add("Artista cadastrado com sucesso!", Severity.Success);
            navigationManager.NavigateTo("/Artistas");
        }
        catch (Exception)
        {
            // Logger.LogInformation("Erro ao cadastrar artista!");
        }

    }

    IList<IBrowserFile> files = new List<IBrowserFile>();

    private async Task UploadFile(IBrowserFile file)
    {
        long maxFileSize = 1024 * 1024 * 15;
        var format = "image/jpeg";
        var resizedImage = await file.RequestImageFileAsync(format, 200, 200);

        using var fileStream = resizedImage.OpenReadStream();
        using var memoryStream = new MemoryStream();
        await fileStream.CopyToAsync(memoryStream);

        fileImage = $"data:{format};base64,{Convert.ToBase64String(memoryStream.ToArray())}";

        fotoPerfil = Convert.ToBase64String(memoryStream.ToArray());
    }
}
